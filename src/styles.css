@import "@react-aria/example-theme";

:root {
  font-family: Inter, Avenir, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;
  overflow: hidden;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

* {
  min-width: 0px;
}

.container {
  margin: 0;
  padding: 0px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  overflow: hidden;
}

@media (prefers-color-scheme: dark) {
  :root {
    color: #f6f6f6;
    background-color: #2f2f2f;
  }
}

.icon-card {
  border: 2px solid #444;
  cursor: pointer;
}

.icon-card:hover {
  border-color: #396cd8;
}
.icon-card:active {
  border-color: #396cd8;
  background-color: #e8e8e8;
}

/* 
Table Styles 
*/

/*
dialog
*/

.button {
  display: flex;
  height: 2.5rem;
  user-select: none;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  white-space: nowrap;
  border-radius: 0.5rem;
  border-style: none;
  background-color: hsl(204 10% 10% / 0.1);
  color: #ffffff;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 1.5rem;

  text-decoration-line: none;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: hsl(204 100% 40%);
  --border: rgba(0, 0, 0, 0.1);
  --highlight: rgba(255, 255, 255, 0.2);
  --shadow: rgba(0, 0, 0, 0.1);
  box-shadow: inset 0 0 0 1px var(--border), inset 0 2px 0 var(--highlight),
    inset 0 -1px 0 var(--shadow), 0 1px 1px var(--shadow);
  font-weight: 500;
}

.button:hover {
  background-color: #333;
}

.button[aria-disabled="true"] {
  opacity: 0.5;
}

.button[aria-expanded="true"] {
  background-color: #333;
}

.button[data-focus-visible] {
  outline-style: solid;
}

.button:active,
.button[data-active] {
  padding-top: 0.125rem;
  box-shadow: inset 0 0 0 1px var(--border), inset 0 2px 0 var(--border);
}

:is(.dark .button) {
  background-color: #333;
  color: hsl(204 20% 100%);
  --shadow: rgba(0, 0, 0, 0.25);
  --border: rgba(255, 255, 255, 0.1);
  --highlight: rgba(255, 255, 255, 0.05);
  box-shadow: inset 0 0 0 1px var(--border), inset 0 -1px 0 1px var(--shadow),
    inset 0 1px 0 var(--highlight);
}

:is(.dark .button:hover) {
  background-color: hsl(204 20% 100% / 0.1);
}

:is(.dark .button)[aria-expanded="true"] {
  background-color: hsl(204 20% 100% / 0.1);
}

:is(.dark .button:active),
:is(.dark .button[data-active]) {
  box-shadow: inset 0 0 0 1px var(--border), inset 0 1px 1px 1px var(--shadow);
}

@media (min-width: 640px) {
  .button {
    gap: 0.5rem;
  }
}

.backdrop {
  background-color: hsl(204 10% 10% / 0.1);

  opacity: 0;
  transition-property: opacity, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  backdrop-filter: blur(0);
}

:is(.dark .backdrop) {
  background-color: hsl(204 10% 10% / 0.5);
}

.dialog {
  position: fixed;
  inset: 0.75rem;
  z-index: 50;
  margin: auto;
  display: flex;
  height: fit-content;
  max-height: calc(100vh - 2 * 0.75rem);
  flex-direction: column;
  gap: 1rem;
  overflow: auto;
  border-radius: 0.75rem;
  background-color: #222;
  padding: 1rem;
  color: #ffffff;
  box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  transform-origin: center;
  opacity: 0;
  transition-property: opacity, transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transform: scale(0.95);
}

:is(.dark .dialog) {
  border-width: 1px;
  border-style: solid;
  border-color: hsl(204 3% 26%);
  background-color: hsl(204 3% 18%);
  color: hsl(204 20% 100%);
}

@media (min-width: 640px) {
  .dialog {
    top: 10vh;
    bottom: 10vh;
    margin-top: 0px;
    max-height: 80vh;
    width: 420px;
    border-radius: 1rem;
    padding: 1.5rem;
  }
}

.heading {
  margin: 0px;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 600;
}

.backdrop[data-enter] {
  opacity: 1;
  backdrop-filter: blur(4px);
}

.dialog[data-enter] {
  opacity: 1;
  transform: scale(1);
}

// UTILITY- CLASSES

.flex {
  display: flex;
}

.fx {
  display: flex;
}

.gap-10 {
  gap: 10px;
}

.gap-5 {
  gap: 5px;
}

.flex-start {
  align-items: flex-start;
}

.col {
  flex-direction: column;
}

.center {
  align-items: center;
  align-content: center;
}

.mt-10 {
  margin-top: 10px;
}

// Reset for Spectrum

._5uzlQq_spectrum-Table-cellWrapper {
  display: block;
}

._5uzlQq_spectrum-Table-cellWrapper {
  display: block !important;
}

// react-aria comboBox

.react-aria-ComboBox {
  color: var(--text-color);

  .react-aria-Input {
    margin: 0;
    font-size: 1.072rem;
    background: var(--field-background);
    color: var(--field-text-color);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    padding: 0.286rem 2rem 0.286rem 0.571rem;
    vertical-align: middle;

    &[data-focused] {
      outline: none;
      outline: 2px solid var(--focus-ring-color);
      outline-offset: -1px;
    }
  }

  .react-aria-Button {
    background: var(--highlight-background);
    color: var(--highlight-foreground);
    forced-color-adjust: none;
    border-radius: 4px;
    border: none;
    margin-left: -1.714rem;
    width: 1.429rem;
    height: 1.429rem;
    padding: 0;
    font-size: 0.857rem;
    cursor: default;

    &[data-pressed] {
      box-shadow: none;
      background: var(--highlight-background);
    }
  }
}

.react-aria-Popover[data-trigger="ComboBox"] {
  width: var(--trigger-width);

  .react-aria-ListBox {
    display: block;
    width: unset;
    max-height: inherit;
    min-height: unset;
    border: none;

    .react-aria-Header {
      padding-left: 1.571rem;
    }
  }

  .react-aria-ListBoxItem {
    padding: 0.286rem 0.571rem 0.286rem 1.571rem;

    &[data-focus-visible] {
      outline: none;
    }

    &[data-selected] {
      font-weight: 600;
      background: unset;
      color: var(--text-color);

      &::before {
        content: "✓";
        content: "✓" / "";
        alt: " ";
        position: absolute;
        top: 4px;
        left: 4px;
      }
    }

    &[data-focused],
    &[data-pressed] {
      background: var(--highlight-background);
      color: var(--highlight-foreground);
    }
  }
}
